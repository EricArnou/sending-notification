name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
          
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: notification_service
        options: >-
          --health-cmd="pg_isready -U postgres"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
        
      - name: Start PostgreSQL with Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Set up Maven
        uses: actions/setup-java@v3
        with:
          maven-version: '4.0.0'
          
      - name: Set up SQS queues
        run: |
          export SQS_ENDPOINT=http://localhost:4566
          aws --endpoint-url=$SQS_ENDPOINT sqs create-queue --queue-name update-status
          aws --endpoint-url=$SQS_ENDPOINT sqs create-queue --queue-name sending-email-queue
          aws --endpoint-url=$SQS_ENDPOINT sqs create-queue --queue-name sending-sms-queue
          aws --endpoint-url=$SQS_ENDPOINT sqs create-queue --queue-name sending-push-queue
          aws --endpoint-url=$SQS_ENDPOINT sqs create-queue --queue-name sending-whatsapp-queue

      - name: Build with Maven
        run: mvn clean install -P dev -DskipTests
        
  test:
    runs-on: ubuntu-latest
    needs: build
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'

      - name: Set up Maven
        uses: actions/setup-java@v3
        with:
          maven-version: '4.0.0'

      - name: Run tests
        run: mvn test -P test
        env:
          AWS_ACCESS_KEY_ID: fake
          AWS_SECRET_ACCESS_KEY: fake
          AWS_REGION: us-east-1
          LOCALSTACK_HOST: localhost
          SQS_ENDPOINT: http://localhost:4566
        
